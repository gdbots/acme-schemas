'use strict';

import Fb from 'gdbots/pbj/field-builder';
import IdentifierType from 'gdbots/pbj/type/identifier-type';
import MessageRefType from 'gdbots/pbj/type/message-ref-type';
import MicrotimeType from 'gdbots/pbj/type/microtime-type';
import Mixin from 'gdbots/pbj/mixin';
import NodeStatus from '';
import SchemaId from 'gdbots/pbj/schema-id';
import StringEnumType from 'gdbots/pbj/type/string-enum-type';
import StringType from 'gdbots/pbj/type/string-type';
import SystemUtils from 'gdbots/common/util/system-utils';

export default class NodeV1Mixin extends SystemUtils.mixinClass(Mixin)
{
  /**
   * {@inheritdoc}
   */
  getId() {
    return SchemaId.fromString('pbj:gdbots:ncr:mixin:node:1-0-0');
  }

  /**
   * {@inheritdoc}
   */
  getFields() {
    return [
      /*
       * The "_id" value:
       * - MUST NOT change for the life of the node.
       * - SHOULD be globally unique
       * - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())
       */
      Fb.create('_id', IdentifierType.create())
        .required()
        .overridable(true)
        .build(),
      Fb.create('status', StringEnumType.create())
        .withDefault(NodeStatus.DRAFT)
        .instance(NodeStatus)
        .build(),
      Fb.create('etag', StringType.create())
        .maxLength(100)
        .pattern('^[\\w\\.:-]+$')
        .build(),
      Fb.create('created_at', MicrotimeType.create())
        .build(),
      /*
       * A fully qualified reference to what created this node. This is intentionally a message-ref
       * and not a user id because it is often a program that creates nodes, not a user.
       */
      Fb.create('creator_ref', MessageRefType.create())
        .build(),
      Fb.create('updated_at', MicrotimeType.create())
        .useTypeDefault(false)
        .build(),
      /*
       * A fully qualified reference to what updated this node. This is intentionally a message-ref
       * and not a user id because it is often a program that updates nodes, not a user.
       * E.g. "acme:iam:node:app:cli-scheduler" or "acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854"
       */
      Fb.create('updater_ref', MessageRefType.create())
        .build(),
      /*
       * A reference to the last event that changed the state of this node.
       * E.g. "acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854"
       */
      Fb.create('last_event_ref', MessageRefType.create())
        .build(),
      Fb.create('title', StringType.create())
        .build()
    ];
  }
}
